#!/bin/bash


usb_print() {
    devices=$(lsblk -Jplno NAME,TYPE,RM,SIZE,MOUNTPOINT,VENDOR)
    output="ï’‚"
    counter=0
    processed_vendors=""

    for unmounted in $(echo "$devices" | jq -r '.blockdevices[] | select(.type == "part") | select(.rm == true) | select(.mountpoint == null) | .name'); do
        unmounted_no_digits=$(echo "$unmounted" | tr -d "[:digit:]")
        vendor=$(echo "$devices" | jq -r '.blockdevices[] | select(.name == "'"$unmounted_no_digits"'") | .vendor')
        vendor=$(echo "$vendor" | tr -d ' ')

        if [[ $processed_vendors == *"$vendor"* ]]; then
            continue
        fi
        processed_vendors+="$vendor "

        if [ $counter -eq 0 ]; then
            space=""
        else
            space="   "
        fi
        counter=$((counter + 1))

        output="$output$space$vendor"
    done

    for mounted in $(echo "$devices" | jq -r '.blockdevices[] | select(.type == "part") | select(.rm == true) | select(.mountpoint != null) | .size'); do
        if [ $counter -eq 0 ]; then
            space=" "
        else
            space="   "
        fi
        counter=$((counter + 1))

        output="$output$space$mounted"
    done

    echo "$output"
}

usb_update() {
    pid=$(cat "$path_pid")

    if [ "$pid" != "" ]; then
        kill -10 "$pid"
    fi

    action="$2"
    device="$3"
    
    case "$action" in
        add)
            notify-send "USB Device" "USB detected: $device"
i           ;;
        mounted)
            notify-send "USB Device" "USB mounted: $device"
            ;;
        remove)
            notify-send "USB Device" "USB disconnected: $device"
            ;;
        no_usb)
            notify-send "USB Device" "No USB devices connected."
            ;;
        *)
            ;;
    esac
}

path_pid="/tmp/polybar-system-usb-udev.pid"

case "$1" in
    --update)
        action="$2"
        device="$3"
        usb_update "$action" "$device"
        ;;
    --mount)
        devices=$(lsblk -Jplno NAME,TYPE,RM,MOUNTPOINT,VENDOR)
        usb_connected=$(echo "$devices" | jq -r '.blockdevices[] | select(.type == "part") | select(.rm == true) | select(.mountpoint == null) | .name')

        if [ -z "$usb_connected" ]; then
            notify-send "USB Device" "No USB devices connected."
        else
            for mount in $usb_connected; do
                udisksctl mount --no-user-interaction -b "$mount"
                device_info=$(echo "$devices" | jq -r ".blockdevices[] | select(.name == \"$mount\") | .vendor" | tr -d ' ')
                notify-send "USB Device" "USB mounted: $device_info"
            done
        fi
        usb_update
        ;;
    --unmount)
        devices=$(lsblk -Jplno NAME,TYPE,RM,MOUNTPOINT,VENDOR)

        for unmount in $(echo "$devices" | jq -r '.blockdevices[] | select(.type == "part") | select(.rm == true) | select(.mountpoint != null) | .name'); do
            device_info=$(echo "$devices" | jq -r ".blockdevices[] | select(.name == \"$unmount\") | .vendor" | tr -d ' ')
            udisksctl unmount --no-user-interaction -b "$unmount"
            udisksctl power-off --no-user-interaction -b "$unmount"
            notify-send "USB Device" "USB disconnected: $device_info"
        done
        usb_update
        ;;
    *)  
      echo $$ > $path_pid


        trap exit INT
        trap "echo" USR1

        while true; do
            usb_print

            sleep 60 &
            wait
        done
        ;;
esac
