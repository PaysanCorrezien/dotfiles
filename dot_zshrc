# Created by Zap installer
[ -f "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh" ] && source "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh"
plug "zsh-users/zsh-autosuggestions"
plug "zap-zsh/supercharge"
# plug "zap-zsh/zap-prompt"
plug "zsh-users/zsh-syntax-highlighting"
## Ajout personnel
plug "MichaelAquilina/zsh-you-should-use"

source $HOME/.config/zsh/zap-prompt.zsh-theme
source $HOME/.config/zsh/aliases.zsh
source $HOME/.config/zsh/exports.zsh
source $HOME/.config/zsh/secrets.zsh
source $HOME/.config/zsh/wsl.zsh
source $HOME/.config/zsh/nnn.zsh
source $HOME/.config/zsh/bindings.zsh

HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=20000
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # save after each command, needed for tmux 
setopt SHARE_HISTORY # share command history data Anoter attempt for tmux

# Load and initialise completion system
autoload -Uz compinit
compinit

# HACK: 
# test debut lvim tmux
export LUNARVIM_CONFIG_DIR="${LUNARVIM_CONFIG_DIR:-"/home/dylan/.config/lvim"}"
export LUNARVIM_CACHE_DIR="${LUNARVIM_CACHE_DIR:-"/home/dylan/.cache/lvim"}"
export LUNARVIM_RUNTIME_DIR="${LUNARVIM_RUNTIME_DIR:-"/home/dylan/.local/share/lunarvim"}"
# HACK: 
# Set the tmux pane to the current directory
precmd() {
    local parent_dir=$(dirname "${PWD}")
    local current_dir="${PWD##*/}"
    tmux rename-window " ${parent_dir##*/}/${current_dir}"
}

# attempt with fzf tab
source ~/.local/share/fzf-tab/fzf-tab.plugin.zsh

eval "$(tmuxifier init -)"
eval "$(zoxide init zsh)"

GPG_TTY=$(tty)
export GPG_TTY

# Copy current prompt to clipboard with ctrl A
if [[ -n $DISPLAY ]]; then
    copy_line_to_x_clipboard() {
        echo -n $BUFFER | xclip -selection clipboard
        zle reset-prompt
    }
    zle -N copy_line_to_x_clipboard
    bindkey '^A' copy_line_to_x_clipboard
fi


# Provides gitignorrr completion for zsh
_gitignorrr_get_command_list() {
    # gi cmd cache file
    cache=~/.config/.gitignorrr_cmd_list

    # check if cache file exists and is younger than half a month
    if [[ ! -f "$cache" || $(($(date +%s) - $(date -r "$cache" +%s))) -gt 1296000 ]]; then
        curl -sL https://www.toptal.com/developers/gitignore/api/list | tr "," "\n" > "$cache"
    fi
    cat "$cache"
}

_gitignorrr () {
    compset -P '*,'
    compadd -S '' $(_gitignorrr_get_command_list)
}
compdef _gitignorrr gitignorrr
